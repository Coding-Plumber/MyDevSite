<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    
    <title>Kyle McAndrew</title>
    <description>Just somebody trying to learn a thing or two</description>
    <link>https://kylemcandrew.dev/</link>
    
    <language>en</language>
    <copyright>Copyright 2024, Calvin Tran</copyright>
    <lastBuildDate>Mon, 24 Jun 2024 00:00:00 +0000</lastBuildDate>
    <generator>Hugo - gohugo.io</generator>
    <docs>http://cyber.harvard.edu/rss/rss.html</docs>
    <atom:link href="https://kylemcandrew.dev//atom.xml" rel="self" type="application/atom+xml"/>
    
    
    <item>
      <title>Two Keyboards!?</title>
      <link>https://kylemcandrew.dev/posts/two-keyboards/</link>
      <description>&lt;h1&gt;Exploring Ergonomic Split Keyboards: My Journey with the Glove 80&lt;/h1&gt;
&lt;p&gt;Over the last few months, I started to look into ergonomic split keyboards and a few keyboards kept coming up:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Kinesis Advantage 360&lt;/li&gt;
  &lt;li&gt;Glove 80&lt;/li&gt;
  &lt;li&gt;ZSA Moonlander&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Why Though?&lt;/h2&gt;
&lt;p&gt;As a self-employed plumber who also works as a software engineer, I began noticing fatigue in my wrists. After a decade of repetitive movements like using screwdrivers, I started to worry about carpal tunnel syndrome (CTS). I researched ways to prevent this because I really enjoy my job and wanted to plan for longevity. I came across an article that seems to corroborate this:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/entrez/query.fcgi?DB=pubmed&#34;&gt;PubMed research on ergonomic keyboards&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The research suggests that fixed-split ergonomic keyboards can reduce pain and the likelihood of developing musculoskeletal disorders in typists over extended use. It seems that the forced position of a normal keyboard can increase muscle strain, whereas an ergonomic or split ergonomic keyboard can alleviate this.&lt;/p&gt;
&lt;h2&gt;Glove 80&lt;/h2&gt;
&lt;p&gt;&lt;img
  src=&#34;https://kylemcandrew.dev/images/glove80BEV.jpeg&#34;
  alt=&#34;Glove 80 top view&#34;
  loading=&#34;lazy&#34;
  decoding=&#34;async&#34;
  class=&#34;full-width&#34;
/&gt;

&lt;/p&gt;
&lt;p&gt;The Glove 80 caught my eye. They kind of look like goalkeeper gloves to me every time I take a step back and look at them.&lt;/p&gt;
&lt;p&gt;I decided on the Glove 80 because of its excellent reviews. Some complaints mentioned they&#39;re better suited for larger hands, which worked in my favor as I was worried about the opposite.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;https://kylemcandrew.dev/images/glove80Side.jpeg&#34;
  alt=&#34;Glove 80 side view&#34;
  loading=&#34;lazy&#34;
  decoding=&#34;async&#34;
  class=&#34;full-width&#34;
/&gt;

&lt;/p&gt;
&lt;p&gt;It has a natural curve and feels incredibly comfortable. You can even &#39;tent&#39; it, raising the legs to a 45-degree angle, a 90-degree angle, or attach it to your chair with accessories.&lt;/p&gt;
&lt;h2&gt;Cost&lt;/h2&gt;
&lt;p&gt;The Glove 80 is fairly expensive, costing me Â£322. However, you pay for what you get, and can you put a price on your health? As a plumber, I always bought high-quality tools, and this keyboard feels well-made. It has reignited my enjoyment of typing and motivated me to relearn touch typing.&lt;/p&gt;
&lt;p&gt;It comes in two colors (white or dark gray) and offers 4 key choices:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Kailh Choc v1 Brown Tactile&lt;/li&gt;
  &lt;li&gt;Kailh Choc v1 Red Linear 50gf&lt;/li&gt;
  &lt;li&gt;Kailh Choc v1 Red Pro Linear 35gf&lt;/li&gt;
  &lt;li&gt;Kailh Choc v1 White clicky&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also order one with unsoldered keys if you have soldering experience and prefer custom keys.&lt;/p&gt;
&lt;h2&gt;QWERTY &amp; Engram&lt;/h2&gt;
&lt;p&gt;This is where I probably messed up a little. After 20 years of using QWERTY, I decided to explore alternative layouts while switching keyboards.&lt;/p&gt;
&lt;h3&gt;Why is QWERTY the way it is?&lt;/h3&gt;
&lt;p&gt;QWERTY was introduced in 1873 for the Remington No. 1 typewriter. Its design was influenced by mechanical limitations, primarily to reduce jamming of typebars. The layout arranged commonly used letters apart to slow down typing just enough to prevent jams.&lt;/p&gt;
&lt;h3&gt;Alternative Layouts&lt;/h3&gt;
&lt;p&gt;I researched several alternative layouts:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Dvorak (1930):&lt;/strong&gt; Designed to increase typing speed and reduce finger movement.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Colemak (2006):&lt;/strong&gt; Aims to retain many QWERTY shortcuts while placing common letters on the home row.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Workman (2010):&lt;/strong&gt; Focuses on reducing lateral finger movements and finger strain.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Engram (2016):&lt;/strong&gt; An ergonomic layout optimized using computer algorithms.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I ended up trying a slightly altered version of Engram by Sunak. It places less-used characters like &#39;Z&#39; and &#39;Q&#39; on the little finger. You can find Sunak&#39;s review and layout article &lt;a href=&#34;https://sunaku.github.io/moergo-glove80-keyboard.html#lower-layer&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;https://kylemcandrew.dev/images/EngramLayout.png&#34;
  alt=&#34;Credit to Sunak for the image, check his layout guide here and why he made the choices in the design&#34;
  loading=&#34;lazy&#34;
  decoding=&#34;async&#34;
  class=&#34;full-width&#34;
/&gt;

&lt;/p&gt;
&lt;h2&gt;My Typing Progress&lt;/h2&gt;
&lt;p&gt;Here&#39;s how my typing speed progressed:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Week 1: 15 WPM&lt;/li&gt;
  &lt;li&gt;Week 2: 25 WPM&lt;/li&gt;
  &lt;li&gt;Week 3: 30 WPM&lt;/li&gt;
  &lt;li&gt;Week 4: 35 WPM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After a few months, I can now touch type at around 65 WPM and have started working on increasing my speed again.&lt;/p&gt;
&lt;h2&gt;Last Thoughts&lt;/h2&gt;
&lt;p&gt;I&#39;m thrilled with the change. Since switching, I haven&#39;t experienced any wrist pain or fatigue, and typing has become fun again.&lt;/p&gt;
&lt;p&gt;One last thing: when I got my split keyboard and changed layouts, I also decided to switch to Vim. Learning a new layout and Vim simultaneously was challenging and slowed me down initially. However, now that I&#39;m past the learning curve, it was a great decision, and I love the shortcuts and skills I&#39;ve gained.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;https://kylemcandrew.dev/images/mentionedVimMeme.jpg&#34;
  alt=&#34;I&amp;amp;rsquo;ll leave you with this&amp;amp;hellip;&#34;
  loading=&#34;lazy&#34;
  decoding=&#34;async&#34;
  class=&#34;full-width&#34;
/&gt;

&lt;/p&gt;
</description>
      <author>Kyle McAndrew</author>
      <guid>https://kylemcandrew.dev/posts/two-keyboards/</guid>
      <pubDate>Mon, 24 Jun 2024 00:00:00 +0000</pubDate>
    </item>
    
    <item>
      <title>Backend website architecture</title>
      <link>https://kylemcandrew.dev/posts/website-be-architecture/</link>
      <description>&lt;p&gt;I always like to work on projects that achieve multiple goals. Since I want to focus on backend and cloud development for the next few months, I decided to create a real-world application that I&#39;ll actually use. This led me to build a comprehensive plumbing website using the following technologies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;React with Next.js&lt;/li&gt;
&lt;li&gt;TypeScript&lt;/li&gt;
&lt;li&gt;Tailwind CSS&lt;/li&gt;
&lt;li&gt;AWS (Amazon Web Services)&lt;/li&gt;
&lt;li&gt;Go (Golang)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Having already created a straightforward plumbing website, I wanted version 2 to focus on automating as much of the process as possible, from booking to job completion.&lt;/p&gt;
&lt;p&gt;Having already created a straightforward plumbing website, I wanted version 2 to focus on automating as much of the process as possible, from booking to job completion.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve created an MVP (Minimum Viable Product) architecture diagram, but I have many more ideas to implement. My focus is on getting the core functionality up and running, then iteratively adding new features in an agile manner.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;img
  src=&#34;https://kylemcandrew.dev/images/heating-medics-be-arc.svg&#34;
  alt=&#34;planned mvp digram&#34;
  loading=&#34;lazy&#34;
  decoding=&#34;async&#34;
  class=&#34;full-width&#34;
/&gt;

&lt;/p&gt;
&lt;h2&gt;How the MVP is Designed&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Form Submission:&lt;/b&gt; The user submits a form, triggering a Lambda function that processes the data and stores it in a database.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Calendar Integration (Challenge):&lt;/b&gt; The trickier part involves syncing available booking times with my phone&#39;s calendar. The idea is that events added to my Google Calendar will trigger a Lambda function to update the database, blocking off those times for bookings.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Additional Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Frontend Postcode Checker:&lt;/b&gt; A postcode radius checker on the frontend will determine if a user&#39;s location is within the service area. This will be implemented using a JSON-based hash map for fast (O(1)) lookups, ensuring a smooth user experience.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Dynamic Booking Calendar:&lt;/b&gt; After passing the postcode check, users will see a calendar displaying available booking times fetched from the backend. This gives me granular control over the days and times offered for each service.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Mobile Calendar Integration&lt;/h2&gt;
&lt;p&gt;The more complex aspect is integrating this functionality with my mobile calendar. Adding an event to my Google Calendar should automatically update the database, blocking off those times for bookings.&lt;/p&gt;
&lt;h2&gt;The Road Ahead&lt;/h2&gt;
&lt;p&gt;I have many more features in mind, but I prefer to start with an MVP, tackling smaller tasks and gradually adding complexity once the core application is functional.&lt;/p&gt;
&lt;p&gt;If anybody has implemented anything similar with google calender would be interesting to hear.&lt;/p&gt; 
</description>
      <author>Kyle McAndrew</author>
      <guid>https://kylemcandrew.dev/posts/website-be-architecture/</guid>
      <pubDate>Tue, 21 May 2024 00:00:00 +0000</pubDate>
    </item>
    
    <item>
      <title>Binary Search</title>
      <link>https://kylemcandrew.dev/posts/binary-search/</link>
      <description>&lt;p&gt;I&amp;rsquo;ve been learning algorithms for a while and it&amp;rsquo;s part of my constant learning goal for the year and i have commited to atleast 100 posts on this page so this next one i have done on binary search.&lt;/p&gt;
&lt;p&gt;Ever searched through a massive phone book for a name starting with &amp;lsquo;K&amp;rsquo;? Yeah probably not if your still in your 20&amp;rsquo;s! Anyway youâll have to imagine it. Instead of starting at the beginning, you&amp;rsquo;d likely flip to the middle. This is the essence of a binary search.&lt;/p&gt;
&lt;p&gt;We keep halving the data until we find our target. If we land on &amp;lsquo;L&amp;rsquo;, we know &amp;lsquo;K&amp;rsquo; must be to the left, instantly discarding half the phone book. We halve again, find our section, and bam! â only 25% of the original data remains after just two steps. Compare this to a linear search, where you&amp;rsquo;d check every name, potentially going through the entire phone book.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Think of it like a number guessing game with numbers 1 to 10.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;https://kylemcandrew.dev/images/1to10.png&#34;
  alt=&#34;10 sorted ints&#34;
  loading=&#34;lazy&#34;
  decoding=&#34;async&#34;
  class=&#34;full-width&#34;
/&gt;

&lt;/p&gt;
&lt;p&gt;To minimize guesses, you start with 5 or 6&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;https://kylemcandrew.dev/images/1to5.png&#34;
  alt=&#34;5 sorted ints&#34;
  loading=&#34;lazy&#34;
  decoding=&#34;async&#34;
  class=&#34;full-width&#34;
/&gt;

&lt;/p&gt;
&lt;p&gt;instantly reducing the possibilities by half. Say your next guess is 3, and I say &amp;ldquo;lower.&amp;rdquo; You now only have to worry about 1-3.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;https://kylemcandrew.dev/images/1to3.png&#34;
  alt=&#34;3 sorted ints&#34;
  loading=&#34;lazy&#34;
  decoding=&#34;async&#34;
  class=&#34;full-width&#34;
/&gt;

&lt;/p&gt;
&lt;p&gt;One more guess (2), and you nail it.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;https://kylemcandrew.dev/images/2withCrown.png&#34;
  alt=&#34;2 is king&#34;
  loading=&#34;lazy&#34;
  decoding=&#34;async&#34;
  class=&#34;full-width&#34;
/&gt;

&lt;/p&gt;
&lt;p&gt;It took 4 guesses for 10 numbers, which might seem unimpressive. But scale it up:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;100 numbers: 7 guesses&lt;/li&gt;
&lt;li&gt;1000 numbers: 10 guesses&lt;/li&gt;
&lt;li&gt;100,000 numbers: Only 17 guesses!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notice how even doubling the input (100,000 to 200,000) only needs one extra guess! A linear search gets linearly slower as the input grows.&lt;/p&gt;
&lt;p&gt;This efficiency is expressed in Big O notation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Binary search: O(log n) - logarithmic growth&lt;/li&gt;
&lt;li&gt;Linear search: O(n) â growth directly tied to input size&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h3 id=&#34;brief-explanation-on-logarithms&#34;&gt;Brief explanation on logarithms&amp;hellip;&lt;/h3&gt;
&lt;p&gt;This is taken from a book i&amp;rsquo;m working through called &amp;lsquo;Grokking algorithms&amp;rsquo; by Aditya Y. Bhargava which i would recommend if DSA interests you and you don&amp;rsquo;t know where to start.&lt;/p&gt;
&lt;p&gt;You may not remember what logarithms are, but you probably know what exponentials are. log10 100 is like asking âHow many 10s do we multiply together to get 100?â The answer is 2: 10 x 10. So log10 100 = 2. Logs are the inverse of exponentials.&lt;/p&gt;
&lt;p&gt;10Â² = 100 â log10 100 = 2&lt;br&gt;
10Â³ = 1000 â log10 1000 = 3&lt;br&gt;
2Â³ = 8â log2 8= 3&lt;br&gt;
2â´ = 16 â log2 16 = 4&lt;br&gt;
2âµ = 32 â log2 32 = 5&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Logs are the inverse of exponentials.&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;worst-case-scenario-is-what-matters&#34;&gt;Worst-case scenario is what matters&lt;/h3&gt;
&lt;p&gt;Worst-case scenario is what matters in Big O notation, for example if n = 100 there are 100 possibilities and there is nothing stopping us finding it on attempt 1 of 100 and that iteration would in theory be O(1) however we use worst case to determine speeds but it is occasionally possible for a O(n) to out perform a O(log n).&lt;/p&gt;
&lt;p&gt;Binary search can only be used on sorted data because of the nature of how it searches so there is added time complexities behind the scenes for sorting the data that should be accounted for.&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;some-real-world-use-cases-for-binary-search&#34;&gt;Some real-world use cases for binary search:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Databases and range queries&lt;/li&gt;
&lt;li&gt;Isolating faults in a complex system, by testing the midpoint of a process it can eliminate half very quickly.&lt;/li&gt;
&lt;li&gt;The âmiddle outâ compression algorithm by Pied Piper ð &amp;hellip;Ok, Iâm sure it would have been.&lt;/li&gt;
&lt;/ul&gt;
</description>
      <author>Kyle McAndrew</author>
      <guid>https://kylemcandrew.dev/posts/binary-search/</guid>
      <pubDate>Mon, 22 Apr 2024 00:00:00 +0000</pubDate>
    </item>
    
    <item>
      <title>Beginners journey to the cloud</title>
      <link>https://kylemcandrew.dev/posts/a-beginners-intro-to-the-cloud/</link>
      <description>&lt;p&gt;I have wrote this as a beginner in using cloud services, my intention is to improve my writing skills, hold myself accountable and to be able to look back on my growth in the future. Therefore it is far from perfect it&amp;rsquo;s harder to write than i imagined, if anybody has some resources on helping to write be it technical documentation or articles and books on brainstorming and formatting then please do share.&lt;/p&gt;
&lt;h2 id=&#34;bytes--bits&#34;&gt;Bytes &amp;amp; bits&lt;/h2&gt;
&lt;h3 id=&#34;whats-a-bit&#34;&gt;What&amp;rsquo;s a Bit?&lt;/h3&gt;
&lt;p&gt;Imagine a lightbulb: it&amp;rsquo;s either on (1) or off (0). This binary choice represents the most basic unit of data in computing, known as a bit.&lt;/p&gt;
&lt;h3 id=&#34;and-a-byte&#34;&gt;And a Byte?&lt;/h3&gt;
&lt;p&gt;A byte combines 8 of these bits (e.g., 01001000). With each bit having 2 possible states, a byte offers 2^8 (256) possible combinations, forming the basis of digital language.&lt;/p&gt;
&lt;p&gt;Iâm now going to try and explain a VPC at a high level using an analogy, let&amp;rsquo;s see how this goes.&lt;/p&gt;
&lt;h3 id=&#34;internet-gateway-igw&#34;&gt;Internet Gateway (IGW)&lt;/h3&gt;
&lt;p&gt;Think of the internet as a vast network of roads. Entering a private cloud network (VPC) from this expansive network requires passing through a security checkpointâthe Internet Gateway (IGW). This IGW acts much like a guard, scrutinizing the source and destination of data packets to ensure they comply with the security standards of the VPC. It&amp;rsquo;s this meticulous check that keeps our digital gated community safe and connected.&lt;/p&gt;
&lt;p&gt;This could be seen like the following.&lt;/p&gt;
&lt;p&gt;You pull off the main road (internet) and go down a private road, pulling up to a security booth where you&amp;rsquo;re greeted by a guard. This guard does a few checks before giving you any access. In the world of cloud computing, this guard is the Internet Gateway (IGW), a critical checkpoint that controls the flow of parcels (data packets) between the gated community (VPC) and the world outside (the internet).&lt;/p&gt;
&lt;p&gt;The guard checks the labels (source and destination IP addresses) on your parcel to ensure it&amp;rsquo;s destined for an address within the community and that it has the right permissions to enter. If everything checks out, the gate swings open, and you&amp;rsquo;re allowed to proceed along the private roads (network paths) inside the gated community to deliver your parcel.&lt;/p&gt;
&lt;p&gt;However, if you&amp;rsquo;re a resident trying to send a parcel out into the world, the guard (IGW) plays an equally crucial role. They ensure your parcel is safely handed off to the postal service on the main road, making sure it reaches its destination anywhere in the world. This process is seamless, providing a secure and controlled way for information to move in and out of the gated community, ensuring the safety and privacy of its residents.&lt;/p&gt;
&lt;h3 id=&#34;vpc-virtual-private-cloud&#34;&gt;VPC (Virtual Private Cloud)&lt;/h3&gt;
&lt;p&gt;A VPC is a private cloud environment that we use to host and protect our services. This is a nice gated community so it costs, you pay for the security and features provided. We have the correct identification to allow us into the complex so they let us in and send us to the correct building for our parcel delivery which is addressed to a certain building within the complex.&lt;/p&gt;
&lt;h3 id=&#34;cidr-block-classless-inter-domain-routing-block&#34;&gt;CIDR Block (Classless Inter-Domain Routing Block)&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s say the address for the VPC location is âAWS Complex 10.0.1.0/16â â this is called the CIDR block, and I&amp;rsquo;ll try to explain it below. Upon entering the AWS cloud complex, ready to deliver your parcel, you encounter its unique addressing system. Unlike traditional street addresses, this complex uses a special layout for naming its buildingsâthink &amp;ldquo;Ivy Cottage&amp;rdquo; or &amp;ldquo;The Stables&amp;rdquo;. This unique layout is defined by what&amp;rsquo;s known as a CIDR block. It&amp;rsquo;s like the architectural blueprint of the complex, detailing how addresses are allocated and the total number of buildings it can accommodate. A CIDR block sets the boundaries for all possible addresses within the complex, ensuring each building has its own distinct location for precise delivery.&lt;/p&gt;
&lt;h3 id=&#34;understanding-ip-addresses&#34;&gt;Understanding IP Addresses&lt;/h3&gt;
&lt;p&gt;An IPv4 address is made up of 4 bytes and would look something like this: 192.168.1.0 Using an IPv4 address of 192.168.1.0, we can picture this as an address we would use for our house: Full address: 192.168.1.0 192.168 could be the area, like Manchester, Didsbury 1.0 represents the specific building and apartment number We have our address for AWS Complex 10.0.0.0/16 &amp;hellip;.wait, you said it&amp;rsquo;s 4 bytes and you&amp;rsquo;ve thrown a /16 at me! What is this?!?! Don&amp;rsquo;t panic! This is just a way of organising the unique IP addresses (or house locations), and it&amp;rsquo;s actually simple how we work it out. If we have 10.0.0&lt;/p&gt;
&lt;p&gt;My intention is this gives an insight into the very basic understanding, and maybe i can use it as a refresher if i ever forget for a high level overview.&lt;/p&gt;
&lt;p&gt;Thank You&lt;/p&gt;
</description>
      <author>Kyle McAndrew</author>
      <guid>https://kylemcandrew.dev/posts/a-beginners-intro-to-the-cloud/</guid>
      <pubDate>Tue, 02 Apr 2024 00:00:00 +0000</pubDate>
    </item>
    
  </channel>
</rss>
